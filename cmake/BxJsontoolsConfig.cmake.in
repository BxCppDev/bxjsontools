# - Config file for the Jsontools package
# It defines the following variables
#  BxJsontools_DEFINITIONS   - compile definitions needed to use Bayeux/Jsontools
#  BxJsontools_INCLUDE_DIRS  - include directories for Bayeux/Jsontools
#  BxJsontools_LIBRARIES     - libraries to link against

# There is no explicit Boost dependency but here are recommandations for
# client projects that would need Boost:
#  BxJsontools_BOOST_VERSION
#  BxJsontools_BOOST_COMPONENTS

#----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

message(STATUS "[info] BxJsontoolsConfig: Entering...")
#-----------------------------------------------------------------------
# Locate ourselves, since all our config files should have been installed
# alongside us...
#
get_filename_component(__bxjsontools_config_dir "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "[info] BxJsontoolsConfig: BxJsontools CMake config in '${__bxjsontools_config_dir}'")

set(BxJsontools_VERSION @BxJsontools_VERSION@)
message(STATUS "[info] BxJsontoolsConfig: BxJsontools_VERSION = '${BxJsontools_VERSION}'")

# - Boost
set(BxJsontools_BOOST_ROOT       @BOOST_ROOT@)
set(BxJsontools_BOOST_VERSION    @BxJsontools_BOOST_VERSION@)
set(BxJsontools_BOOST_COMPONENTS @BXJSONTOOLS_BOOST_COMPONENTS@)
# if (BxJsontools_BOOST_ROOT)
#   set(BOOST_ROOT ${BxJsontools_BOOST_ROOT})
# endif()
# if (BxJsontools_BOOST_VERSION)
#   set(Boost_ADDITIONAL_VERSIONS ${BxJsontools_BOOST_VERSION})
# endif()
# set(Boost_NO_BOOST_CMAKE ON)
# message(STATUS "[info] BxJsontoolsConfig: Searching for Boost version ${BxJsontools_BOOST_VERSION} with 'MODULE' mode...")
# set(Boost_NO_BOOST_CMAKE ON)
# find_package(Boost ${BxJsontools_BOOST_VERSION} EXACT
#   REQUIRED
#   ${BxJsontools_BOOST_COMPONENTS}
#   )
# message(STATUS "[info] BxJsontoolsConfig: Found Boost version ${Boost_VERSION}")

#-----------------------------------------------------------------------
# Build option
set(BxJsontools_DEFINITIONS @BXJSONTOOLS_DEFINITIONS@)
message(STATUS "[info] BxJsontoolsConfig: BxJsontools_DEFINITIONS = '${BxJsontools_DEFINITIONS}'")
if(CMAKE_COMPILER_IS_GNUCXX)
  set(CMAKE_CXX_FLAGS ${BxJsontools_DEFINITIONS})
endif()

#-----------------------------------------------------------------------
# Hard code paths to headers
#

set(BxJsontools_INCLUDE_DIR "${__bxjsontools_config_dir}/@BXJSONTOOLS_CMAKEDIR_TO_INCLUDEDIR@")
mark_as_advanced(BxJsontools_INCLUDE_DIR)

set(BxJsontools_INCLUDE_DIRS
  "${BxJsontools_INCLUDE_DIR}"
  "${BxJsontools_INCLUDE_DIR}/bayeux"
  "@Boost_INCLUDE_DIRS@"
  )
message(STATUS "[info] BxJsontoolsConfig: BxJsontools_INCLUDE_DIRS = '${BxJsontools_INCLUDE_DIRS}'")

#-----------------------------------------------------------------------
# Handle paths/targets for third party deps here...

#-----------------------------------------------------------------------
# Include the file listing all the imported targets.
# This is installed in the same location as us...
#
if(NOT BxJsontools_TARGETS_LOADED)
  include("${__bxjsontools_config_dir}/BxJsontoolsTargets.cmake")
  set(BxJsontools_TARGETS_LOADED 1)
endif()

# - BxJsontools itself
set(BxJsontools_LIBRARY Bayeux_jsontools CACHE FILE "BxJsontools library (imported)")
mark_as_advanced(BxJsontools_LIBRARY)

set(BxJsontools_LIBRARIES ${BxJsontools_LIBRARY})
list(APPEND BxJsontools_LIBRARIES
  @BxJsontools_OTHER_LIBS@
  )
message(STATUS "[info] BxJsontoolsConfig: BxJsontools_LIBRARIES = '${BxJsontools_LIBRARIES}'")

message(STATUS "[info] BxJsontoolsConfig: Exiting.")

# - end